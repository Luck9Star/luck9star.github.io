<!DOCTYPE html><html lang="zh-CN"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width"><meta name="theme-color" content="#222" media="(prefers-color-scheme: light)"><meta name="theme-color" content="#222" media="(prefers-color-scheme: dark)"><meta name="generator" content="Hexo 5.4.2"><link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png"><link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png"><link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png"><link rel="mask-icon" href="/images/logo.svg" color="#222"><link rel="stylesheet" href="css/main.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" integrity="sha256-/4UQcSmErDzPCMAiuOiWPVVsNN2s3ZY/NsmXNcj0IFc=" crossorigin="anonymous"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.css" integrity="sha256-Vzbj7sDDS/woiFS3uNKo8eIuni59rjyNGtXfstRzStA=" crossorigin="anonymous"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/themes/blue/pace-theme-minimal.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/pace.min.js" integrity="sha256-gqd7YTjg/BtfqWSwsJOvndl0Bxc8gFImLEkXQT8+qj0=" crossorigin="anonymous"></script><script class="next-config" data-name="main" type="application/json">{"hostname":"hexo.1tian.me","root":"/","images":"images","scheme":"Gemini","darkmode":true,"version":"8.15.0","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12},"copycode":{"enable":false,"style":null},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":true,"lazyload":true,"pangu":true,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"stickytabs":false,"motion":{"enable":true,"async":false,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"prism":false,"i18n":{"placeholder":"搜索...","empty":"没有找到任何搜索结果：${query}","hits_time":"找到 ${hits} 个搜索结果（用时 ${time} 毫秒）","hits":"找到 ${hits} 个搜索结果"}}</script><script src="js/config.js"></script><meta name="description" content="这是一篇记录创建Ghost镜像过程的文章。   Docker的镜像使用起来非常方便，可以省去很多环境的配置，甚至可以说是口袋中的系统，很方便就能部署或者迁移到一台新的服务器上。   当然也有一些缺点，如Mac和Window下是使用了一个Linux的虚拟机实现的。又比如Win10下无法使用这个坑爹的问题，（至少我的那台Win10系统的安装后连不上虚拟机。）这也使测试Build Dockerfil"><meta property="og:type" content="article"><meta property="og:title" content="在Docker上自动构建中文的Ghost镜像"><meta property="og:url" content="https://hexo.1tian.me/dockerzi-dong-gou-jian"><meta property="og:site_name" content="倚天的博客"><meta property="og:description" content="这是一篇记录创建Ghost镜像过程的文章。   Docker的镜像使用起来非常方便，可以省去很多环境的配置，甚至可以说是口袋中的系统，很方便就能部署或者迁移到一台新的服务器上。   当然也有一些缺点，如Mac和Window下是使用了一个Linux的虚拟机实现的。又比如Win10下无法使用这个坑爹的问题，（至少我的那台Win10系统的安装后连不上虚拟机。）这也使测试Build Dockerfil"><meta property="og:locale" content="zh_CN"><meta property="article:published_time" content="2015-08-05T07:39:36.000Z"><meta property="article:modified_time" content="2015-09-11T02:35:36.000Z"><meta property="article:author" content="倚天"><meta property="article:tag" content="Docker"><meta property="article:tag" content="Ghost"><meta name="twitter:card" content="summary"><link rel="canonical" href="https://hexo.1tian.me/dockerzi-dong-gou-jian"><script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"zh-CN","comments":true,"permalink":"https://hexo.1tian.me/dockerzi-dong-gou-jian","path":"/dockerzi-dong-gou-jian","title":"在Docker上自动构建中文的Ghost镜像"}</script><script class="next-config" data-name="calendar" type="application/json">""</script><title>在Docker上自动构建中文的Ghost镜像 | 倚天的博客</title><script src="https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js"></script><noscript><link rel="stylesheet" href="css/noscript.css"></noscript></head><body itemscope itemtype="http://schema.org/WebPage" class="use-motion"><div class="headband"></div><main class="main"><div class="column"><header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container"><div class="site-nav-toggle"><div class="toggle" aria-label="切换导航栏" role="button"><span class="toggle-line"></span> <span class="toggle-line"></span> <span class="toggle-line"></span></div></div><div class="site-meta"><a href="/" class="brand" rel="start"><i class="logo-line"></i><p class="site-title">倚天的博客</p><i class="logo-line"></i></a></div><div class="site-nav-right"><div class="toggle popup-trigger" aria-label="搜索" role="button"></div></div></div><nav class="site-nav"><ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="index.html" rel="section"><i class="fa fa-home fa-fw"></i>首页</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>标签</a></li><li class="menu-item menu-item-categories"><a href="/categories/" rel="section"><i class="fa fa-th fa-fw"></i>分类</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>归档</a></li></ul></nav></header><aside class="sidebar"><div class="sidebar-inner sidebar-nav-active sidebar-toc-active"><ul class="sidebar-nav"><li class="sidebar-nav-toc">文章目录</li><li class="sidebar-nav-overview">站点概览</li></ul><div class="sidebar-panel-container"><div class="post-toc-wrap sidebar-panel"><div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%9B%9E%E5%88%B0%E4%B8%BB%E9%A2%98"><span class="nav-number">1.</span> <span class="nav-text">回到主题</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8E%A5%E4%B8%8B%E6%9D%A5%E5%B0%B1%E5%BE%97%E5%BC%80%E5%A7%8B%E5%81%9A%E4%BA%8B%E4%BA%86"><span class="nav-number">2.</span> <span class="nav-text">接下来就得开始做事了</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8E%A5%E7%9D%80%E6%88%91%E5%8F%88%E6%83%B3%E5%88%B0"><span class="nav-number">3.</span> <span class="nav-text">接着我又想到</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#eof"><span class="nav-number">4.</span> <span class="nav-text">EOF</span></a></li></ol></div></div><div class="site-overview-wrap sidebar-panel"><div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person"><p class="site-author-name" itemprop="name">倚天</p><div class="site-description" itemprop="description"></div></div><div class="site-state-wrap animated"><nav class="site-state"><div class="site-state-item site-state-posts"><a href="/archives/"><span class="site-state-item-count">8</span> <span class="site-state-item-name">日志</span></a></div><div class="site-state-item site-state-categories"><a href="/categories/"><span class="site-state-item-count">3</span> <span class="site-state-item-name">分类</span></a></div><div class="site-state-item site-state-tags"><a href="/tags/"><span class="site-state-item-count">8</span> <span class="site-state-item-name">标签</span></a></div></nav></div></div></div></div></aside></div><div class="main-inner post posts-expand"><div class="post-block"><article itemscope itemtype="http://schema.org/Article" class="post-content" lang="zh-CN"><link itemprop="mainEntityOfPage" href="https://hexo.1tian.me/dockerzi-dong-gou-jian"><span hidden itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="image" content="images/avatar.gif"><meta itemprop="name" content="倚天"></span><span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization"><meta itemprop="name" content="倚天的博客"><meta itemprop="description" content=""></span><span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork"><meta itemprop="name" content="在Docker上自动构建中文的Ghost镜像 | 倚天的博客"><meta itemprop="description" content=""></span><header class="post-header"><h1 class="post-title" itemprop="name headline">在Docker上自动构建中文的Ghost镜像</h1><div class="post-meta-container"><div class="post-meta"><span class="post-meta-item"><span class="post-meta-item-icon"><i class="far fa-calendar"></i> </span><span class="post-meta-item-text">发表于</span> <time title="创建时间：2015-08-05 15:39:36" itemprop="dateCreated datePublished" datetime="2015-08-05T15:39:36+08:00">2015-08-05</time> </span><span class="post-meta-item"><span class="post-meta-item-icon"><i class="far fa-calendar-check"></i> </span><span class="post-meta-item-text">更新于</span> <time title="修改时间：2015-09-11 10:35:36" itemprop="dateModified" datetime="2015-09-11T10:35:36+08:00">2015-09-11</time> </span><span class="post-meta-item"><span class="post-meta-item-icon"><i class="far fa-folder"></i> </span><span class="post-meta-item-text">分类于</span> <span itemprop="about" itemscope itemtype="http://schema.org/Thing"><a href="categories/Docker/" itemprop="url" rel="index"><span itemprop="name">Docker</span></a> </span></span><span class="post-meta-break"></span> <span class="post-meta-item" title="本文字数"><span class="post-meta-item-icon"><i class="far fa-file-word"></i> </span><span class="post-meta-item-text">本文字数：</span> <span>1.2k</span> </span><span class="post-meta-item" title="阅读时长"><span class="post-meta-item-icon"><i class="far fa-clock"></i> </span><span class="post-meta-item-text">阅读时长 &asymp;</span> <span>4 分钟</span></span></div></div></header><div class="post-body" itemprop="articleBody"><blockquote><p>这是一篇记录创建Ghost镜像过程的文章。</p></blockquote><blockquote><p>Docker的镜像使用起来非常方便，可以省去很多环境的配置，甚至可以说是口袋中的系统，很方便就能部署或者迁移到一台新的服务器上。</p></blockquote><blockquote><p>当然也有一些缺点，如Mac和Window下是使用了一个Linux的虚拟机实现的。又比如Win10下无法使用这个坑爹的问题，（至少我的那台Win10系统的安装后连不上虚拟机。）这也使测试Build Dockerfile时略微不便利。</p></blockquote><h2 id="回到主题"><a class="markdownIt-Anchor" href="#回到主题"></a> 回到主题</h2><p>最重要的有2件事：</p><ul><li><p><a target="_blank" rel="noopener" href="http://www.ghostchina.com/download/">下载中文Ghost</a></p></li><li><p>创建Dockerfile</p></li></ul><p>创建这个文件时由于Docker官方已经有Ghost的支持，所以我先从官方Github上找到了Ghost对应的Dockerfile，当然这是一个图省事的方式。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">0.10</span>-slim</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> groupadd user &amp;&amp; useradd --create-home --home-dir /home/user -g user user</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">set</span> -x \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; apt-get update \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; apt-get install -y --no-install-recommends curl ca-certificates \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/apt/lists/*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grab gosu for easy step-down from root</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">arch</span>=<span class="string">&quot;<span class="subst">$(dpkg --print-architecture)</span>&quot;</span> \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">set</span> -x \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; curl -o /usr/local/bin/gosu -SL <span class="string">&quot;https://github.com/tianon/gosu/releases/download/1.2/gosu-<span class="variable">$arch</span>&quot;</span> \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; curl -o /usr/local/bin/gosu.asc -SL <span class="string">&quot;https://github.com/tianon/gosu/releases/download/1.2/gosu-<span class="variable">$arch</span>.asc&quot;</span> \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; gpg --verify /usr/local/bin/gosu.asc \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">rm</span> /usr/local/bin/gosu.asc \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">chmod</span> +x /usr/local/bin/gosu</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> GHOST_SOURCE /usr/src/ghost</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> <span class="variable">$GHOST_SOURCE</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> GHOST_VERSION <span class="number">0.6</span>.<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> buildDeps=<span class="string">&#x27; \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">        gcc \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">        make \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">        python \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">        unzip \</span></span></span><br><span class="line"><span class="string"><span class="language-bash">    &#x27;</span> \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">set</span> -x \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; apt-get update &amp;&amp; apt-get install -y <span class="variable">$buildDeps</span> --no-install-recommends &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/apt/lists/* \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; curl -sSL <span class="string">&quot;https://ghost.org/archives/ghost-<span class="variable">$&#123;GHOST_VERSION&#125;</span>.zip&quot;</span> -o ghost.zip \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; unzip ghost.zip \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; npm install --production \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=<span class="literal">false</span> -o APT::AutoRemove::SuggestsImportant=<span class="literal">false</span> <span class="variable">$buildDeps</span> \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">rm</span> ghost.zip \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; npm cache clean \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">rm</span> -rf /tmp/npm*</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> GHOST_CONTENT /var/lib/ghost</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$GHOST_CONTENT</span>&quot;</span> &amp;&amp; <span class="built_in">chown</span> -R user:user <span class="string">&quot;<span class="variable">$GHOST_CONTENT</span>&quot;</span></span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> <span class="variable">$GHOST_CONTENT</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> docker-entrypoint.sh /entrypoint.sh</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;/entrypoint.sh&quot;</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">2368</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;npm&quot;</span>, <span class="string">&quot;start&quot;</span>]</span></span><br></pre></td></tr></table></figure><p><code>具体Dockerfile语法详见[官网](https://docs.docker.com/reference/builder/)说明。</code></p><p>这个Dockerfile首先用了Node 0.10这是GhostChina推荐Ghost使用的Node版本。还安装了gosu用来代替sudo命令，官方的Dockerfile中都加了这个。</p><p>这边官方是用工具更新这个Dockerfile的，使用了<code>GHOST_VERSION</code>的环境变量，官方那边版本更新只需要修改这边就可以了。下面一大段RUN的代码块，主要做了更新插件，从官网下载对应版本的Ghost、解压缩、安装、清理的工作。 接下去就是绑定内容的路径，以及拷贝执行脚本的过程。脚本中主要做了下内容路径里面文件初始化的过程。最后制定端口，然后运行。</p><h2 id="接下来就得开始做事了"><a class="markdownIt-Anchor" href="#接下来就得开始做事了"></a> 接下来就得开始做事了</h2><p>首先必须要在Github中建立一个项目，以存放Dockerfile以及sh脚本等Dockerfile中需要使用的文件。然后再Docker官网上绑定Github账号，创建自动构建的容器，选中Github上的项目。初步的工作就完成了，每次<code>Trigger a Build</code>都会自动clone这个项目，然后执行build的过程。</p><p>我最初只是修改了其中ghost文件地址，指向到ghostchina得下载地址上去。结果在Docker那边开始build时候发现无法连接到<a target="_blank" rel="noopener" href="http://www.ghostchina.com/">GhostChina</a>无法下载文件。国外翻到墙内也成了一个问题。</p><p>这时我想到了Github。于是把下载下的代码新建了个项目并且传上了Github。 而Dockerfile中把下载地址指向了Github的tag的source地址。理论上的确是没问题，不过我当时没注意到source的zip文件解压出来是一个文件夹，而不是直接就是源码。这个问题坑了我一断时间，不过最后也让build正常了。生成了一个稳定的镜像。</p><h2 id="接着我又想到"><a class="markdownIt-Anchor" href="#接着我又想到"></a> 接着我又想到</h2><p>为何不直接把Dockerfile也一起放到Ghost源码的项目中，可以直接对这个项目的Dockerfile Build。</p><p>这改动其实也就只是多一句<code>COPY ./ $&#123;GHOST_SOURCE&#125;/</code>，然后去除了下载解压一级删除ghost.zip文件的步骤的部分。 当然这种情况下GHOST_VERSION就完全没用了，因为在自动构建的时候，Docker那边会自动checkout到相应的Tag，然后Build。</p><p>最后在Docker官网上配置下Build的branch、Tag。<code>Trigger a Build</code>一下就可以慢慢等着那边完成了。有错误的话也会报error，进去也可以看到日志。</p><h2 id="eof"><a class="markdownIt-Anchor" href="#eof"></a> EOF</h2><blockquote><p>最后</p><p>感谢<a target="_blank" rel="noopener" href="http://www.ghostchina.com/">Ghost中文网</a>汉化以及给Ghost添加了一些适用于国内插件。</p><p>附上这个项目的<a target="_blank" rel="noopener" href="https://github.com/Luck9Star/Ghost-Zh">Github地址</a></p><p>以及Docker镜像 luck9star/ghost-zh</p><p>顺便吐槽下，用七牛存来图片的话，服务器在墙外的话会各种传输失败。最后还是只能用本地文件了。</p></blockquote></div><footer class="post-footer"><div class="post-tags"><a href="tags/Docker/" rel="tag"># Docker</a> <a href="tags/Ghost/" rel="tag"># Ghost</a></div><div class="post-nav"><div class="post-nav-item"><a href="/hello-world" rel="prev" title="Hello Word"><i class="fa fa-chevron-left"></i> Hello Word</a></div><div class="post-nav-item"><a href="/zai-dockershi-yong-nginxdai-li-ti-gao-ghostxing-neng" rel="next" title="在Docker中使用nginx代理提高Ghost性能">在Docker中使用nginx代理提高Ghost性能 <i class="fa fa-chevron-right"></i></a></div></div></footer></article></div></div></main><footer class="footer"><div class="footer-inner"><div class="copyright">&copy; <span itemprop="copyrightYear">2023</span> <span class="with-love"><i class="fa fa-heart"></i> </span><span class="author" itemprop="copyrightHolder">倚天</span></div><div class="wordcount"><span class="post-meta-item"><span class="post-meta-item-icon"><i class="fa fa-chart-line"></i> </span><span title="站点总字数">4k</span> </span><span class="post-meta-item"><span class="post-meta-item-icon"><i class="fa fa-coffee"></i> </span><span title="站点阅读时长">13 分钟</span></span></div><div class="powered-by">由 <a href="https://hexo.io/" rel="noopener" target="_blank">Hexo</a> & <a href="https://theme-next.js.org/" rel="noopener" target="_blank">NexT.Gemini</a> 强力驱动</div></div></footer><div class="back-to-top" role="button" aria-label="返回顶部"><i class="fa fa-arrow-up fa-lg"></i> <span>0%</span></div><noscript><div class="noscript-warning">Theme NexT works best with JavaScript enabled</div></noscript><script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/next-theme-pjax/0.6.0/pjax.min.js" integrity="sha256-vxLn1tSKWD4dqbMRyv940UYw4sXgMtYcK6reefzZrao=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.3/jquery.min.js" integrity="sha256-pvPw+upLPUjgMXY0G+8O0xUf+/Im1MZjXxxgOcBQBXU=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.js" integrity="sha256-yt2kYMy0w8AbtF89WXb2P1rfjcP/HTHLT7097U8Y5b8=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/1.0.8/medium-zoom.min.js" integrity="sha256-7PhEpEWEW0XXQ0k6kQrPKwuoIomz8R8IYyuU1Qew4P8=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/lozad.js/1.16.0/lozad.min.js" integrity="sha256-mOFREFhqmHeQbXpK2lp4nA3qooVgACfh88fpJftLBbc=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/pangu/4.0.7/pangu.min.js" integrity="sha256-j+yj56cdEY2CwkVtGyz18fNybFGpMGJ8JxG3GSyO2+I=" crossorigin="anonymous"></script><script src="js/comments.js"></script><script src="js/utils.js"></script><script src="js/motion.js"></script><script src="js/next-boot.js"></script><script src="js/pjax.js"></script><script src="js/third-party/fancybox.js"></script><script src="js/third-party/pace.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/quicklink/2.3.0/quicklink.umd.js" integrity="sha256-yvJQOINiH9fWemHn0vCA5lsHWJaHs6/ZmO+1Ft04SvM=" crossorigin="anonymous"></script><script class="next-config" data-name="quicklink" type="application/json">{"enable":true,"home":true,"archive":false,"delay":true,"timeout":3000,"priority":true,"url":"https://hexo.1tian.me/dockerzi-dong-gou-jian"}</script><script src="js/third-party/quicklink.js"></script></body></html>